{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Gaming/Desktop/html/product-feedback/src/utils/useIsMobile.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nexport const useIsMobile = (breakpoint = 768) => {\r\n  const [isMobile, setIsMobile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const checkWidth = () => {\r\n      setIsMobile(window.innerWidth < breakpoint);\r\n    };\r\n\r\n    checkWidth();\r\n\r\n    window.addEventListener(\"resize\", checkWidth);\r\n    return () => window.removeEventListener(\"resize\", checkWidth);\r\n  }, [breakpoint]);\r\n\r\n  return isMobile;\r\n};\r\n"],"names":[],"mappings":";;;AAAA;;;AAEO,MAAM,cAAc,CAAC,aAAa,GAAG;;IAC1C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACR,MAAM;oDAAa;oBACjB,YAAY,OAAO,UAAU,GAAG;gBAClC;;YAEA;YAEA,OAAO,gBAAgB,CAAC,UAAU;YAClC;yCAAO,IAAM,OAAO,mBAAmB,CAAC,UAAU;;QACpD;gCAAG;QAAC;KAAW;IAEf,OAAO;AACT;GAfa","debugId":null}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Gaming/Desktop/html/product-feedback/src/app/page.tsx"],"sourcesContent":["\"use client\";\nimport { useEffect, useState, useRef } from \"react\";\nimport Image from \"next/image\";\nimport Lottie from \"lottie-react\";\nimport animationData from \"./Animation - 1748181041132.json\";\nimport { useRouter } from \"next/navigation\";\nimport animationView from \"./scene.json\";\nimport animationClick from \"./Animation - 1749320637246.json\";\nimport animationLoad from \"./Animation - 1748797716617.json\";\nimport { useIsMobile } from \"@/utils/useIsMobile\";\n\nexport default function Home() {\n  const [data, setData] = useState<{\n    publicUserId: string;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    products: any[];\n  } | null>(null);\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const dropdownRef = useRef<HTMLDivElement | null | any>(null);\n  const [sort, setSort] = useState(false);\n  const [categoryFilter, setCategoryFilter] = useState(\"All\");\n  const [showBy, setShowBy] = useState(\"\");\n  const [isNavigating, setIsNavigating] = useState<string | null>(null);\n  const [isView, setIsView] = useState<boolean | null>(false);\n  const [upvoteLoadingId, setUpvoteLoadingId] = useState<string | null>(null);\n  const [addFeedback, setAddFeedback] = useState(false);\n  const isMobile = useIsMobile(600);\n  const [openNav, setOpenNav] = useState(false);\n  const route = useRouter();\n\n  useEffect(() => {\n    const fetchGuest = async () => {\n      const guestToken = localStorage.getItem(\"guestToken\");\n\n      const res = await fetch(\"/api/guest\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          userAgent: navigator.userAgent,\n          guestToken: guestToken || null,\n        }),\n      });\n\n      const result = await res.json();\n\n      if (result?.publicUserId) {\n        localStorage.setItem(\"publicUserId\", result.publicUserId);\n      }\n      if (result?.guestToken) {\n        localStorage.setItem(\"guestToken\", result.guestToken);\n        localStorage.setItem(\"publicUserId\", result.publicUserId);\n      }\n\n      setData(result);\n    };\n\n    fetchGuest();\n  }, []);\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (\n        dropdownRef.current &&\n        !dropdownRef.current.contains(event.target as Node)\n      ) {\n        setSort(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n  if (!data) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <Lottie animationData={animationData} loop={true} />\n      </div>\n    );\n  }\n  let suggestions =\n    data?.products?.filter((p) => p.status === \"suggestion\") || [];\n\n  if (categoryFilter !== \"All\") {\n    suggestions = suggestions?.filter(\n      (p) => p.category?.toLowerCase() === categoryFilter.toLowerCase()\n    );\n  }\n\n  const totalSuggestions = suggestions ? suggestions.length : 0;\n  const sortedSuggestions = [...suggestions];\n  const planned = data.products?.filter((p) => p.status === \"planned\");\n  const progres = data.products?.filter((p) => p.status === \"in-progress\");\n  const live = data.products?.filter((p) => p.status === \"live\");\n\n  switch (showBy) {\n    case \"MostU\":\n      sortedSuggestions.sort((a, b) => b.upvotes - a.upvotes);\n      break;\n    case \"LeastU\":\n      sortedSuggestions.sort((a, b) => a.upvotes - b.upvotes);\n      break;\n    case \"MostC\":\n      sortedSuggestions.sort(\n        (a, b) => (b.comments?.length || 0) - (a.comments?.length || 0)\n      );\n      break;\n    case \"LeastC\":\n      sortedSuggestions.sort(\n        (a, b) => (a.comments?.length || 0) - (b.comments?.length || 0)\n      );\n      break;\n    default:\n      sortedSuggestions.sort((a, b) => b.upvotes - a.upvotes);\n      break;\n  }\n\n  return (\n    <main className=\"flex items-start justify-center gap-10 min-h-screen p-10 \">\n      {isMobile ? (\n        <div className=\"nav\">\n          <div className=\"logo\">\n            <h2>Frontend Mentor</h2>\n            <p>Feedback Board</p>\n          </div>\n\n          <button onClick={() => setOpenNav((prev) => !prev)}>\n            {openNav ? (\n              <Image\n                src={\"/assets/shared/mobile/icon-close.svg\"}\n                width={20}\n                height={20}\n                alt=\"navbar\"\n              ></Image>\n            ) : (\n              <Image\n                src={\"/assets/shared/mobile/icon-hamburger.svg\"}\n                width={20}\n                height={20}\n                alt=\"navbar\"\n              ></Image>\n            )}\n          </button>\n        </div>\n      ) : (\n        <div className=\"left\">\n          <div className=\"logo\">\n            <h2>Frontend Mentor</h2>\n            <p>Feedback Board</p>\n          </div>\n          <div className=\"filter\">\n            <ul>\n              {[\"All\", \"UI\", \"UX\", \"Enhancement\", \"Bug\", \"Feature\"].map(\n                (category) => (\n                  <li\n                    key={category}\n                    onClick={() => setCategoryFilter(category)}\n                    className={categoryFilter === category ? \"active\" : \"\"}\n                  >\n                    {category}\n                  </li>\n                )\n              )}\n            </ul>\n          </div>\n          <div className=\"roadMap\">\n            <div>\n              <h3>Roadmap</h3>\n              <button\n                onClick={() => {\n                  setIsView(true);\n                  route.push(`/view`);\n                }}\n              >\n                View\n              </button>\n            </div>\n            {isView ? (\n              <div className=\"flex justify-center items-center min-h-[100px] viewLoad \">\n                <Lottie\n                  animationData={animationView}\n                  loop={true}\n                  autoplay={true}\n                  initialSegment={[0, 100]}\n                />\n              </div>\n            ) : (\n              <ul>\n                <li>\n                  <div>\n                    <span className=\"color\"></span> <p>Planned</p>\n                  </div>\n                  <span>{planned?.length ?? 0}</span>\n                </li>\n                <li>\n                  <div>\n                    <span className=\"color\"></span> <p>In-Progress</p>\n                  </div>\n                  <span>{progres?.length ?? 0}</span>\n                </li>\n                <li>\n                  <div>\n                    <span className=\"color\"></span> <p>Live</p>\n                  </div>\n                  <span>{live?.length ?? 0}</span>\n                </li>\n              </ul>\n            )}\n          </div>\n        </div>\n      )}\n\n      <div className=\"right\">\n        <div className=\"header\">\n          {\" \"}\n          {isMobile && (\n            <>\n              {\" \"}\n              <div\n                className={`overLay  inset-0 bg-black bg-opacity-10 z-40 ${\n                  openNav ? \"show\" : \"\"\n                }`}\n                onClick={() => setOpenNav(false)}\n              />\n              <div\n                className={`slide fixed top-0 right-0 h-full bg-white z-50 ${\n                  openNav ? \"show\" : \"\"\n                }`}\n              >\n                <div className=\"filter\">\n                  <ul>\n                    {[\"All\", \"UI\", \"UX\", \"Enhancement\", \"Bug\", \"Feature\"].map(\n                      (category) => (\n                        <li\n                          key={category}\n                          onClick={() => setCategoryFilter(category)}\n                          className={\n                            categoryFilter === category ? \"active\" : \"\"\n                          }\n                        >\n                          {category}\n                        </li>\n                      )\n                    )}\n                  </ul>\n                </div>\n                <div className=\"roadMap\">\n                  <div>\n                    <h3>Roadmap</h3>\n                    <button\n                      onClick={() => {\n                        setIsView(true);\n                        route.push(`/view`);\n                      }}\n                    >\n                      View\n                    </button>\n                  </div>\n                  {isView ? (\n                    <div className=\"flex justify-center items-center min-h-[100px] viewLoad \">\n                      <Lottie\n                        animationData={animationView}\n                        loop={true}\n                        autoplay={true}\n                        initialSegment={[0, 100]}\n                      />\n                    </div>\n                  ) : (\n                    <ul className=\"viewList\">\n                      <li>\n                        <div>\n                          <span className=\"color\"></span> <p>Planned</p>\n                        </div>\n                        <span>{planned?.length ?? 0}</span>\n                      </li>\n                      <li>\n                        <div>\n                          <span className=\"color\"></span> <p>In-Progress</p>\n                        </div>\n                        <span>{progres?.length ?? 0}</span>\n                      </li>\n                      <li>\n                        <div>\n                          <span className=\"color\"></span> <p>Live</p>\n                        </div>\n                        <span>{live?.length ?? 0}</span>\n                      </li>\n                    </ul>\n                  )}\n                </div>\n              </div>\n            </>\n          )}\n          <div>\n            <Image\n              src={\"/assets/suggestions/icon-suggestions.svg\"}\n              width={24}\n              height={24}\n              alt=\"suggestions\"\n            />\n            <h3>\n              <span>{totalSuggestions}</span> Suggestions\n            </h3>\n            <div>\n              <button onClick={() => setSort((prev) => !prev)}>\n                <span>Sort by : </span>\n                {showBy === \"MostU\"\n                  ? \"Most Upvotes\"\n                  : showBy === \"LeastU\"\n                  ? \"Least Upvotes\"\n                  : showBy === \"MostC\"\n                  ? \"Most Comments\"\n                  : showBy === \"LeastC\"\n                  ? \"Least Comments\"\n                  : \"Most Upvotes\"}\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"12\"\n                  height=\"6\"\n                  viewBox=\"0 0 12 6\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  className={`${sort ? \"rotate\" : \"\"} arrow-icon`}\n                >\n                  <polyline points=\"1,1 6,5 11,1\" />\n                </svg>\n              </button>\n              {sort && (\n                <ul ref={dropdownRef}>\n                  <li\n                    onClick={() => setShowBy(\"MostU\")}\n                    className={`${\n                      showBy === \"MostU\" ? \"active\" : \"\"\n                    } flex justify-between items-center`}\n                  >\n                    Most Upvotes\n                    {showBy === \"MostU\" && (\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"16\"\n                        height=\"16\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth=\"2\"\n                        viewBox=\"0 0 24 24\"\n                      >\n                        <path d=\"M5 13l4 4L19 7\" />\n                      </svg>\n                    )}\n                  </li>\n                  <li\n                    onClick={() => setShowBy(\"LeastU\")}\n                    className={`${\n                      showBy === \"LeastU\" ? \"active\" : \"\"\n                    } flex justify-between items-center`}\n                  >\n                    Least Upvotes\n                    {showBy === \"LeastU\" && (\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"16\"\n                        height=\"16\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth=\"2\"\n                        viewBox=\"0 0 24 24\"\n                      >\n                        <path d=\"M5 13l4 4L19 7\" />\n                      </svg>\n                    )}\n                  </li>\n                  <li\n                    onClick={() => setShowBy(\"MostC\")}\n                    className={`${\n                      showBy === \"MostC\" ? \"active\" : \"\"\n                    } flex justify-between items-center`}\n                  >\n                    Most Comments\n                    {showBy === \"MostC\" && (\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"16\"\n                        height=\"16\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth=\"2\"\n                        viewBox=\"0 0 24 24\"\n                      >\n                        <path d=\"M5 13l4 4L19 7\" />\n                      </svg>\n                    )}\n                  </li>\n                  <li\n                    onClick={() => setShowBy(\"LeastC\")}\n                    className={`${\n                      showBy === \"LeastC\" ? \"active\" : \"\"\n                    } flex justify-between items-center`}\n                  >\n                    Least Comments\n                    {showBy === \"LeastC\" && (\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"16\"\n                        height=\"16\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth=\"2\"\n                        viewBox=\"0 0 24 24\"\n                      >\n                        <path d=\"M5 13l4 4L19 7\" />\n                      </svg>\n                    )}\n                  </li>\n                </ul>\n              )}\n            </div>\n          </div>\n          <button\n            onClick={() => {\n              setAddFeedback((prev) => !prev);\n              setTimeout(() => {\n                route.push(\"/add\");\n              }, 200);\n            }}\n          >\n            {addFeedback ? (\n              <Lottie\n                animationData={animationLoad}\n                loop={true}\n                autoplay={true}\n                className=\"upvoteLoad\"\n              />\n            ) : (\n              \" + Add Feedback\"\n            )}\n          </button>\n        </div>\n        <div className=\"content\">\n          {data ? (\n            sortedSuggestions.map((p) => (\n              <ul key={p._id}>\n                <div>\n                  {!isMobile && (\n                    <li\n                      className=\"upvotes\"\n                      onClick={async () => {\n                        setUpvoteLoadingId(p._id);\n                        const res = await fetch(\"/api/upvote\", {\n                          method: \"POST\",\n                          headers: { \"Content-Type\": \"application/json\" },\n                          body: JSON.stringify({\n                            productId: p._id,\n                            publicUserId: data.publicUserId,\n                          }),\n                        });\n\n                        const result = await res.json();\n\n                        setData((prev) => {\n                          if (!prev) return prev;\n                          return {\n                            ...prev,\n                            products: prev.products.map((prod) =>\n                              prod._id === p._id\n                                ? { ...prod, upvotes: result.upvotes }\n                                : prod\n                            ),\n                          };\n                        });\n                        setUpvoteLoadingId(null);\n                      }}\n                    >\n                      {upvoteLoadingId === p._id ? (\n                        <Lottie\n                          animationData={animationLoad}\n                          loop={true}\n                          autoplay={true}\n                          className=\"upvoteLoad\"\n                        />\n                      ) : (\n                        <>\n                          <Image\n                            src={`/assets/shared/icon-arrow-up.svg`}\n                            width={8}\n                            height={4}\n                            alt=\"comment\"\n                          />\n                          {p.upvotes}\n                        </>\n                      )}\n                    </li>\n                  )}\n\n                  <div\n                    onClick={() => {\n                      setIsNavigating(p._id);\n                      setTimeout(() => {\n                        route.push(`/${p._id}`);\n                      }, 100);\n                    }}\n                  >\n                    {isNavigating === p._id ? (\n                      <div className=\"flex justify-center items-center min-h-[100px] load bg-black\">\n                        <Lottie animationData={animationClick} loop={true} />\n                      </div>\n                    ) : (\n                      <ul>\n                        <li>{p.title}</li>\n                        <li>{p.description}</li>\n                        <li>{p.category}</li>\n                      </ul>\n                    )}\n                  </div>\n                </div>\n                {!isMobile && (\n                  <li className=\"commentNumber\">\n                    <Image\n                      src={`/assets/shared/icon-comments.svg`}\n                      width={18}\n                      height={16}\n                      alt=\"comment\"\n                    />\n                    {p.comments?.length ?? 0}\n                  </li>\n                )}{\" \"}\n                {isMobile && (\n                  <div className=\"mobileUpvote\">\n                    <li\n                      className=\"upvotes\"\n                      onClick={async () => {\n                        setUpvoteLoadingId(p._id);\n                        const res = await fetch(\"/api/upvote\", {\n                          method: \"POST\",\n                          headers: { \"Content-Type\": \"application/json\" },\n                          body: JSON.stringify({\n                            productId: p._id,\n                            publicUserId: data.publicUserId,\n                          }),\n                        });\n\n                        const result = await res.json();\n\n                        setData((prev) => {\n                          if (!prev) return prev;\n                          return {\n                            ...prev,\n                            products: prev.products.map((prod) =>\n                              prod._id === p._id\n                                ? { ...prod, upvotes: result.upvotes }\n                                : prod\n                            ),\n                          };\n                        });\n                        setUpvoteLoadingId(null);\n                      }}\n                    >\n                      {upvoteLoadingId === p._id ? (\n                        <Lottie\n                          animationData={animationLoad}\n                          loop={true}\n                          autoplay={true}\n                          className=\"upvoteLoad\"\n                        />\n                      ) : (\n                        <>\n                          <Image\n                            src={`/assets/shared/icon-arrow-up.svg`}\n                            width={8}\n                            height={4}\n                            alt=\"comment\"\n                          />\n                          {p.upvotes}\n                        </>\n                      )}\n                    </li>\n                    <li className=\"commentNumber\">\n                      <Image\n                        src={`/assets/shared/icon-comments.svg`}\n                        width={18}\n                        height={16}\n                        alt=\"comment\"\n                      />\n                      {p.comments?.length ?? 0}\n                    </li>\n                  </div>\n                )}\n              </ul>\n            ))\n          ) : (\n            <div className=\"empty\">\n              <Image\n                src={\"/assets/suggestions/illustration-empty.svg\"}\n                width={130}\n                height={130}\n                alt=\"empty\"\n              ></Image>\n              <h1>There is no feedback yet.</h1>\n              <p>\n                Got a suggestion? Found a bug that needs to be squashed? We love\n                hearing about new ideas to improve our app.\n              </p>\n              <button\n                onClick={() => {\n                  setAddFeedback((prev) => !prev);\n                  setTimeout(() => {\n                    route.push(\"/add\");\n                  }, 200);\n                }}\n              >\n                {addFeedback ? (\n                  <Lottie\n                    animationData={animationLoad}\n                    loop={true}\n                    autoplay={true}\n                    className=\"upvoteLoad\"\n                  />\n                ) : (\n                  \" + Add Feedback\"\n                )}\n              </button>{\" \"}\n            </div>\n          )}\n        </div>\n      </div>\n    </main>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}