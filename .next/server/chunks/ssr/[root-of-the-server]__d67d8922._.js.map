{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Gaming/Desktop/html/product-feedback/src/utils/useIsMobile.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nexport const useIsMobile = (breakpoint = 768) => {\r\n  const [isMobile, setIsMobile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const checkWidth = () => {\r\n      setIsMobile(window.innerWidth < breakpoint);\r\n    };\r\n\r\n    checkWidth();\r\n\r\n    window.addEventListener(\"resize\", checkWidth);\r\n    return () => window.removeEventListener(\"resize\", checkWidth);\r\n  }, [breakpoint]);\r\n\r\n  return isMobile;\r\n};\r\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,cAAc,CAAC,aAAa,GAAG;IAC1C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,aAAa;YACjB,YAAY,OAAO,UAAU,GAAG;QAClC;QAEA;QAEA,OAAO,gBAAgB,CAAC,UAAU;QAClC,OAAO,IAAM,OAAO,mBAAmB,CAAC,UAAU;IACpD,GAAG;QAAC;KAAW;IAEf,OAAO;AACT","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Gaming/Desktop/html/product-feedback/src/utils/useAuthRedirect.ts"],"sourcesContent":["\"use client\";\r\n\r\nimport { useRouter } from \"next/navigation\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst useAuthRedirect = (id?: string) => {\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    if (!id) return;\r\n\r\n    const checkAccess = async () => {\r\n      let guestToken = localStorage.getItem(\"guestToken\");\r\n      let publicUserId = localStorage.getItem(\"publicUserId\");\r\n\r\n      if (!guestToken || !publicUserId) {\r\n        const res = await fetch(\"/api/guest\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            userAgent: navigator.userAgent,\r\n            guestToken: guestToken || null,\r\n          }),\r\n        });\r\n\r\n        if (!res.ok) {\r\n          router.replace(\"/\");\r\n          return;\r\n        }\r\n\r\n        const data = await res.json();\r\n        guestToken = data.guestToken;\r\n        publicUserId = data.publicUserId;\r\n\r\n        if (guestToken) localStorage.setItem(\"guestToken\", guestToken);\r\n        if (publicUserId) localStorage.setItem(\"publicUserId\", publicUserId);\r\n      }\r\n\r\n      // Verify access\r\n      const accessRes = await fetch(`/api/verify-access?id=${id}`, {\r\n        headers: {\r\n          \"x-guest-token\": guestToken!,\r\n        },\r\n      });\r\n\r\n      if (accessRes.status !== 200) {\r\n        router.replace(\"/\");\r\n      }\r\n    };\r\n\r\n    checkAccess();\r\n  }, [router, id]);\r\n};\r\n\r\nexport default useAuthRedirect;\r\n"],"names":[],"mappings":";;;AAEA;AACA;AAHA;;;AAKA,MAAM,kBAAkB,CAAC;IACvB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,IAAI;QAET,MAAM,cAAc;YAClB,IAAI,aAAa,aAAa,OAAO,CAAC;YACtC,IAAI,eAAe,aAAa,OAAO,CAAC;YAExC,IAAI,CAAC,cAAc,CAAC,cAAc;gBAChC,MAAM,MAAM,MAAM,MAAM,cAAc;oBACpC,QAAQ;oBACR,SAAS;wBAAE,gBAAgB;oBAAmB;oBAC9C,MAAM,KAAK,SAAS,CAAC;wBACnB,WAAW,UAAU,SAAS;wBAC9B,YAAY,cAAc;oBAC5B;gBACF;gBAEA,IAAI,CAAC,IAAI,EAAE,EAAE;oBACX,OAAO,OAAO,CAAC;oBACf;gBACF;gBAEA,MAAM,OAAO,MAAM,IAAI,IAAI;gBAC3B,aAAa,KAAK,UAAU;gBAC5B,eAAe,KAAK,YAAY;gBAEhC,IAAI,YAAY,aAAa,OAAO,CAAC,cAAc;gBACnD,IAAI,cAAc,aAAa,OAAO,CAAC,gBAAgB;YACzD;YAEA,gBAAgB;YAChB,MAAM,YAAY,MAAM,MAAM,CAAC,sBAAsB,EAAE,IAAI,EAAE;gBAC3D,SAAS;oBACP,iBAAiB;gBACnB;YACF;YAEA,IAAI,UAAU,MAAM,KAAK,KAAK;gBAC5B,OAAO,OAAO,CAAC;YACjB;QACF;QAEA;IACF,GAAG;QAAC;QAAQ;KAAG;AACjB;uCAEe","debugId":null}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Gaming/Desktop/html/product-feedback/src/app/%5Bid%5D/Client.tsx"],"sourcesContent":["\"use client\";\r\nimport React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport Image from \"next/image\";\r\nimport animationUpvote from \"../Animation - 1748797716617.json\";\r\nimport { useIsMobile } from \"@/utils/useIsMobile\";\r\nimport Lottie from \"lottie-react\";\r\nimport animationLoad from \"../Animation - 1748797716617.json\";\r\nimport animationData from \"../Animation - 1748181041132.json\";\r\nimport useAuthRedirect from \"@/utils/useAuthRedirect\";\r\nimport { useParams } from \"next/navigation\";\r\ntype GuestUser = {\r\n  name: string;\r\n  username: string;\r\n  image: string;\r\n  id: string | null;\r\n};\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst Client = ({ feedback }: { feedback: any }) => {\r\n  const route = useRouter();\r\n  const params = useParams();\r\n  const id = params?.id || feedback?._id;\r\n  const [upvotes, setUpvotes] = useState(feedback.upvotes);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [commentText, setCommentText] = useState(\"\");\r\n  const [feedbackData, setFeedbackData] = useState(feedback);\r\n  const [replyContent, setReplyContent] = useState<Record<string, string>>({});\r\n  const [currentUser, setCurrentUser] = useState<GuestUser | null>(null);\r\n  const [addFeedComment, setAddFeedComment] = useState(false);\r\n  const [addFeedReply, setAddFeedReply] = useState<string | null>(null);\r\n  const [addFeedback, setAddFeedback] = useState(false);\r\n  const [addFeedReplyToReply, setAddFeedReplyToReply] = useState<string | null>(\r\n    null\r\n  );\r\n  const [activeReply, setActiveReply] = useState<{\r\n    commentId: string;\r\n    replyingToId: string;\r\n    replyingToUsername: string;\r\n  } | null>(null);\r\n  const [replyInputsOpen, setReplyInputsOpen] = React.useState<{\r\n    [key: string]: boolean;\r\n  }>({});\r\n  const isMobile = useIsMobile(600);\r\n\r\n  const [repliesToReplyContent, setRepliesToReplyContent] = useState<{\r\n    [replyId: string]: string;\r\n  }>({});\r\n\r\n  const totalCommentsAndReplies =\r\n    (feedbackData.comments?.length || 0) +\r\n    (feedbackData.comments?.reduce(\r\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n      (acc: number, comment: any) => acc + (comment?.replies?.length || 0),\r\n      0\r\n    ) || 0);\r\n  useAuthRedirect(id);\r\n  useEffect(() => {\r\n    const fetchFeedback = async () => {\r\n      try {\r\n        const res = await fetch(`/api/feedback?id=${feedback._id}`);\r\n        if (!res.ok) throw new Error(\"Failed to fetch feedback\");\r\n        const data = await res.json();\r\n        setFeedbackData(data);\r\n      } catch (err) {\r\n        console.error(\"Error fetching feedback:\", err);\r\n      }\r\n    };\r\n\r\n    fetchFeedback();\r\n  }, [feedback._id]);\r\n\r\n  useEffect(() => {\r\n    const publicUserId = localStorage.getItem(\"publicUserId\");\r\n    const randomUsername = `guest${Math.floor(Math.random() * 10000)}`;\r\n    const randomColor = `#${Math.floor(Math.random() * 16777215)\r\n      .toString(16)\r\n      .padStart(6, \"0\")}`;\r\n    setCurrentUser({\r\n      name: randomUsername,\r\n      username: randomUsername,\r\n      image: `${randomColor}`,\r\n      id: publicUserId,\r\n    });\r\n  }, []);\r\n  if (!currentUser)\r\n    return (\r\n      <div className=\"flex justify-center items-center min-h-screen\">\r\n        <Lottie\r\n          animationData={animationData}\r\n          loop\r\n          autoplay\r\n          className=\"w-24 h-24\"\r\n        />\r\n      </div>\r\n    );\r\n  return (\r\n    <div className=\"flex items-start justify-center gap-10 min-h-screen p-10 detail\">\r\n      <div>\r\n        <button onClick={() => route.push(\"/\")}>\r\n          <Image\r\n            src={\"/assets/shared/icon-arrow-left.svg\"}\r\n            width={8}\r\n            height={4}\r\n            alt=\"arrow left\"\r\n          />\r\n          Go Back\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            setAddFeedback((prev) => !prev);\r\n            setTimeout(() => {\r\n              route.push(`/edit/${feedbackData._id}`);\r\n            }, 200);\r\n          }}\r\n        >\r\n          {addFeedback ? (\r\n            <Lottie\r\n              animationData={animationLoad}\r\n              loop={true}\r\n              autoplay={true}\r\n              className=\"upvoteLoad addFeedBack\"\r\n            />\r\n          ) : (\r\n            \" Edit Feedback\"\r\n          )}\r\n        </button>{\" \"}\r\n      </div>\r\n      <div className=\"content\">\r\n        <ul>\r\n          <div>\r\n            {!isMobile && (\r\n              <li\r\n                className=\"upvotes\"\r\n                onClick={async () => {\r\n                  setIsLoading(true);\r\n\r\n                  const res = await fetch(\"/api/upvote\", {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify({\r\n                      productId: feedback._id,\r\n                      publicUserId: feedback.publicUserId,\r\n                    }),\r\n                  });\r\n\r\n                  const result = await res.json();\r\n\r\n                  setUpvotes(result.upvotes);\r\n                  setIsLoading(false);\r\n                }}\r\n              >\r\n                <Image\r\n                  src={`/assets/shared/icon-arrow-up.svg`}\r\n                  width={8}\r\n                  height={4}\r\n                  alt=\"comment\"\r\n                />\r\n\r\n                {isLoading ? animationUpvote : upvotes}\r\n              </li>\r\n            )}\r\n\r\n            <ul>\r\n              <li>{feedbackData.title}</li>\r\n              <li>{feedbackData.description}</li>\r\n              <li>{feedbackData.category}</li>\r\n            </ul>\r\n          </div>\r\n          {isMobile && (\r\n            <div className=\"mobileUpvote\">\r\n              <li\r\n                className=\"upvotes\"\r\n                onClick={async () => {\r\n                  setIsLoading(true);\r\n\r\n                  const res = await fetch(\"/api/upvote\", {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify({\r\n                      productId: feedback._id,\r\n                      publicUserId: feedback.publicUserId,\r\n                    }),\r\n                  });\r\n\r\n                  const result = await res.json();\r\n\r\n                  setUpvotes(result.upvotes);\r\n                  setIsLoading(false);\r\n                }}\r\n              >\r\n                <Image\r\n                  src={`/assets/shared/icon-arrow-up.svg`}\r\n                  width={8}\r\n                  height={4}\r\n                  alt=\"comment\"\r\n                />\r\n\r\n                {isLoading ? animationUpvote : upvotes}\r\n              </li>\r\n              <li className=\"commentNumber\">\r\n                <Image\r\n                  src={`/assets/shared/icon-comments.svg`}\r\n                  width={18}\r\n                  height={16}\r\n                  alt=\"comment\"\r\n                />\r\n                {feedbackData.comments?.length ?? 0}\r\n              </li>\r\n            </div>\r\n          )}\r\n          {!isMobile && (\r\n            <li className=\"commentNumber\">\r\n              <Image\r\n                src={`/assets/shared/icon-comments.svg`}\r\n                width={18}\r\n                height={16}\r\n                alt=\"comment\"\r\n              />\r\n              {feedbackData.comments?.length ?? 0}\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n      <div className=\"comments\">\r\n        <h2>{totalCommentsAndReplies} Comments</h2>\r\n        {\r\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n          feedbackData?.comments?.map((comment: any) => {\r\n            return (\r\n              <div\r\n                key={comment._id}\r\n                className={`commentDetail ${\r\n                  comment.replies.length ? \"replyThread\" : \"\"\r\n                }`}\r\n              >\r\n                <ul>\r\n                  <ul>\r\n                    <ul>\r\n                      {comment.user.image.startsWith(\"#\") ? (\r\n                        <li\r\n                          style={{\r\n                            backgroundColor:\r\n                              currentUser.image ||\r\n                              comment.user.image ||\r\n                              \"purple\",\r\n                            width: 40,\r\n                            height: 40,\r\n                            borderRadius: \"50%\",\r\n                          }}\r\n                        />\r\n                      ) : (\r\n                        <li>\r\n                          <Image\r\n                            src={`/${comment.user.image.replace(/^\\.\\//, \"\")}`}\r\n                            width={40}\r\n                            height={40}\r\n                            alt=\"profile\"\r\n                          />\r\n                        </li>\r\n                      )}\r\n                      <div>\r\n                        <li>{comment.user.name}</li>\r\n                        <li>@{comment.user.username}</li>\r\n                      </div>\r\n                    </ul>\r\n                    <button\r\n                      onClick={() =>\r\n                        setActiveReply({\r\n                          commentId: comment._id,\r\n                          replyingToId: comment._id,\r\n                          replyingToUsername: comment.user.username,\r\n                        })\r\n                      }\r\n                    >\r\n                      Reply\r\n                    </button>\r\n                  </ul>\r\n                  <li>{comment.content}</li>\r\n                </ul>\r\n                {comment.replies &&\r\n                  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                  comment.replies.map((reply: any) => {\r\n                    return (\r\n                      <React.Fragment key={reply._id}>\r\n                        <ul key={reply._id} className=\"replies\">\r\n                          <ul>\r\n                            <ul>\r\n                              {reply.user.image.startsWith(\"#\") ? (\r\n                                <li\r\n                                  style={{\r\n                                    backgroundColor:\r\n                                      currentUser.image || reply.user.image,\r\n                                    width: 40,\r\n                                    height: 40,\r\n                                    borderRadius: \"50%\",\r\n                                  }}\r\n                                />\r\n                              ) : (\r\n                                <li>\r\n                                  <Image\r\n                                    src={`/${reply.user.image.replace(\r\n                                      /^\\.\\//,\r\n                                      \"\"\r\n                                    )}`}\r\n                                    width={40}\r\n                                    height={40}\r\n                                    alt=\"profile\"\r\n                                  />\r\n                                </li>\r\n                              )}\r\n                              <div>\r\n                                <li>{reply.user.name}</li>\r\n                                <li>@{reply.user.username}</li>\r\n                              </div>\r\n                            </ul>\r\n                            <button\r\n                              onClick={() =>\r\n                                setReplyInputsOpen((prev) => ({\r\n                                  ...prev,\r\n                                  [reply._id]: !prev[reply._id],\r\n                                }))\r\n                              }\r\n                            >\r\n                              Reply\r\n                            </button>\r\n                          </ul>\r\n                          <li>\r\n                            <span>@{reply.replyingTo}</span>\r\n                            {reply.content}\r\n                          </li>{\" \"}\r\n                          {replyInputsOpen[reply._id] && (\r\n                            <div className=\"addreply\">\r\n                              <textarea\r\n                                value={repliesToReplyContent[reply._id] || \"\"}\r\n                                onChange={(e) =>\r\n                                  setRepliesToReplyContent((prev) => ({\r\n                                    ...prev,\r\n                                    [reply._id]: e.target.value,\r\n                                  }))\r\n                                }\r\n                              />\r\n                              <button\r\n                                onClick={async () => {\r\n                                  setAddFeedReplyToReply(reply._id);\r\n\r\n                                  const res = await fetch(\"/api/replyToReply\", {\r\n                                    method: \"POST\",\r\n                                    headers: {\r\n                                      \"Content-Type\": \"application/json\",\r\n                                    },\r\n                                    body: JSON.stringify({\r\n                                      productId: feedbackData._id,\r\n                                      commentId: comment._id,\r\n                                      replyId: reply._id,\r\n                                      content: repliesToReplyContent[reply._id],\r\n                                      replyingTo: reply.user.username,\r\n                                      user: currentUser,\r\n                                    }),\r\n                                  });\r\n\r\n                                  if (!res.ok) {\r\n                                    console.error(\"Failed to post reply\");\r\n                                    setAddFeedReplyToReply(null);\r\n                                    return;\r\n                                  }\r\n\r\n                                  const updatedFeedback = await res.json();\r\n                                  setFeedbackData(updatedFeedback);\r\n                                  setRepliesToReplyContent((prev) => ({\r\n                                    ...prev,\r\n                                    [reply._id]: \"\",\r\n                                  }));\r\n                                  setReplyInputsOpen({});\r\n                                  setAddFeedReplyToReply(null);\r\n                                }}\r\n                              >\r\n                                {addFeedReplyToReply === reply._id ? (\r\n                                  <Lottie\r\n                                    animationData={animationLoad}\r\n                                    loop={true}\r\n                                    autoplay={true}\r\n                                    className=\"upvoteLoad addFeedBack\"\r\n                                  />\r\n                                ) : (\r\n                                  \"Post Reply\"\r\n                                )}\r\n                              </button>\r\n                            </div>\r\n                          )}\r\n                        </ul>\r\n                        {reply.repliesToReply?.map(\r\n                          // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                          (nestedReply: any, i: number) => (\r\n                            <div\r\n                              key={\r\n                                nestedReply._id || `nested-${reply._id}-${i}`\r\n                              }\r\n                              className=\"nestedReply\"\r\n                            >\r\n                              <ul>\r\n                                <ul>\r\n                                  {\" \"}\r\n                                  {nestedReply.user.image.startsWith(\"#\") ? (\r\n                                    <li\r\n                                      style={{\r\n                                        backgroundColor:\r\n                                          nestedReply.user.image ||\r\n                                          currentUser.image,\r\n                                        width: 40,\r\n                                        height: 40,\r\n                                        borderRadius: \"50%\",\r\n                                      }}\r\n                                    />\r\n                                  ) : (\r\n                                    <li>\r\n                                      <Image\r\n                                        src={`/${nestedReply.user.image.replace(\r\n                                          /^\\.\\//,\r\n                                          \"\"\r\n                                        )}`}\r\n                                        width={40}\r\n                                        height={40}\r\n                                        alt=\"profile\"\r\n                                      />\r\n                                    </li>\r\n                                  )}\r\n                                  <div>\r\n                                    <li>{nestedReply.user?.name}</li>\r\n                                    <li>@{nestedReply.user?.username}</li>\r\n                                  </div>\r\n                                </ul>\r\n                              </ul>\r\n                              <li>\r\n                                <span>@{nestedReply.replyingTo}</span>\r\n                                {nestedReply.content}\r\n                              </li>\r\n                            </div>\r\n                          )\r\n                        )}\r\n                      </React.Fragment>\r\n                    );\r\n                  })}\r\n\r\n                {activeReply?.replyingToId === comment._id && (\r\n                  <div className=\"addreply\">\r\n                    <textarea\r\n                      value={replyContent[comment._id] || \"\"}\r\n                      onChange={(e) =>\r\n                        setReplyContent((prev) => ({\r\n                          ...prev,\r\n                          [comment._id]: e.target.value,\r\n                        }))\r\n                      }\r\n                    />\r\n                    <button\r\n                      onClick={async () => {\r\n                        setAddFeedReply(comment._id);\r\n\r\n                        const res = await fetch(\"/api/reply\", {\r\n                          method: \"POST\",\r\n                          headers: { \"Content-Type\": \"application/json\" },\r\n                          body: JSON.stringify({\r\n                            productId: feedbackData._id,\r\n                            commentId: comment._id,\r\n                            reply: {\r\n                              content: replyContent[comment._id],\r\n                              replyingTo: comment.user.username,\r\n                              user: currentUser,\r\n                            },\r\n                          }),\r\n                        });\r\n\r\n                        const updatedFeedback = await res.json();\r\n                        setFeedbackData(updatedFeedback);\r\n                        setReplyContent((prev) => ({\r\n                          ...prev,\r\n                          [comment._id]: \"\",\r\n                        }));\r\n                        setActiveReply(null);\r\n                        setAddFeedReply(null);\r\n                      }}\r\n                    >\r\n                      {addFeedReply === comment._id ? (\r\n                        <Lottie\r\n                          animationData={animationLoad}\r\n                          loop={true}\r\n                          autoplay={true}\r\n                          className=\"upvoteLoad addFeedBack\"\r\n                        />\r\n                      ) : (\r\n                        \"Post Reply\"\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            );\r\n          })\r\n        }\r\n      </div>\r\n      <div className=\"addComment\">\r\n        <h3>Add Comment</h3>\r\n        <textarea\r\n          value={commentText}\r\n          onChange={(e) => setCommentText(e.target.value)}\r\n        />\r\n        <div>\r\n          <p>{250 - commentText.length} characters left</p>{\" \"}\r\n          <button\r\n            onClick={async () => {\r\n              setAddFeedComment(true);\r\n              const res = await fetch(\"/api/comment\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({\r\n                  productId: feedbackData._id,\r\n                  content: commentText,\r\n                  user: currentUser,\r\n                }),\r\n              });\r\n\r\n              const updatedFeedback = await res.json();\r\n              setFeedbackData(updatedFeedback);\r\n              setCommentText(\"\");\r\n              setAddFeedComment(false);\r\n            }}\r\n          >\r\n            {addFeedComment ? (\r\n              <Lottie\r\n                animationData={animationLoad}\r\n                loop={true}\r\n                autoplay={true}\r\n                className=\"upvoteLoad addFeedBack\"\r\n              />\r\n            ) : (\r\n              \"Post Comment\"\r\n            )}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Client;\r\n"],"names":[],"mappings":"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","debugId":null}}]
}